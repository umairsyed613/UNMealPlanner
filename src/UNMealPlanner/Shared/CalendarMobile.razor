@inject IJSRuntime JsRuntime
<style>
    .container-fluid{
        padding: 0 !important;
    }
    .cal-mobile {
        background-color: #eaeaea;
    }
</style>
<div class="d-flex flex-column user-select-none">
    <div class="calendar-header-mobile">
        <h1>
            @CalendarBuilder.GetMonthName(DateTime.Now.Year, DateTime.Now.Month)
        </h1>
        <p>2020</p>
    </div>
    <div class="d-flex flex-row flex-nowrap cal-mobile">
        <div class="d-flex flex-column w-100 p-1">
            @for(int i = 1; i <= CalenderData.Count; i++)
            {
                var j = i - 1;
                <CalendarDay Item="@CalenderData[j]" Nr="i" IsMobileView="true"/>
            }
        </div>
    </div>
</div>

@code {
    List<CalenderViewItem> CalenderData = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CalenderData = CalendarBuilder.GetDaysOfMonthForMobileView(DateTime.Now.Year, DateTime.Now.Month);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("CheckForToday");
    }

}
