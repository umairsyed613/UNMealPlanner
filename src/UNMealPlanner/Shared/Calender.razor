@using System.Globalization
@inject IModalService Modal


<div class="calendar-container">
    <div class="calendar-header">
        <h1>
            @getMonthName(DateTime.Now.Year, DateTime.Now.Month)
        </h1>
        <p>2020</p>
    </div>
    <div class="calendar">
        <span class="day-name">Mon</span>
        <span class="day-name">Tue</span>
        <span class="day-name">Wed</span>
        <span class="day-name">Thu</span>
        <span class="day-name">Fri</span>
        <span class="day-name">Sat</span>
        <span class="day-name">Sun</span>
        @foreach (var dd in GetDaysOfMonthForView(DateTime.Now.Year, DateTime.Now.Month))
        {
            <div @onclick="ShowMealDialog" class="@(dd.IsDisabled ? "day day--disabled": "day")">@dd.Day<span class="total-cal w-100">Total Cal: 12</span></div>}

        @*<section class="task task--warning">Projects</section>
            <section class="task task--danger">Design Sprint</section>
            <section class="task task--primary">
                Product Checkup 1
                <div class="task__detail">
                    <h2>Product Checkup 1</h2>
                    <p>15-17th November</p>
                </div>
            </section>
            <section class="task task--info">Product Checkup 2</section>*@
    </div>
</div>

@code { public string getMonthName(int year, int month)
    {
        return new DateTime(year, month, 1)
            .ToString("MMMM", CultureInfo.InvariantCulture);
    }

    private void ShowMealDialog()
    {
        Modal.Show<MealComponent>("My Meal");
    }

    private IEnumerable<CalenderViewItem> GetDaysOfMonthForView(int year, int month)
    {
        var daysInMonth = new List<CalenderViewItem>();
        var day = new DateTime(year, month, 1).DayOfWeek;
        var daysInPreviousMonth = DateTime.DaysInMonth(year, month - 1);
        var daysInSelectedMonth = DateTime.DaysInMonth(year, month);
        var temp = (int)day;
        while (temp != 1)
        {
            daysInMonth.Add(new CalenderViewItem(daysInPreviousMonth - 1, true));
            temp--;
        }

        for (int i = 1; i <= daysInSelectedMonth; i++)
        {
            daysInMonth.Add(new CalenderViewItem(i, false));
        }

        var lastDay = new DateTime(year, month, daysInSelectedMonth).DayOfWeek;

        temp = (int)lastDay;
        var j = 1;
        while (temp >= 0)
        {
            daysInMonth.Add(new CalenderViewItem(j++, true));
            temp--;
        }

        return daysInMonth;
    }

    class CalenderViewItem
    {
        public int Day { get; set; }

        public bool IsDisabled { get; set; }

        public CalenderViewItem(int day, bool isDisabled)
        {
            Day = day;
            IsDisabled = isDisabled;
        }
    } }